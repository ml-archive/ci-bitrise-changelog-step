title: Git Commit Changelog
summary: Generates a changelog for deployment between two tags
description: |-
  Generates a changelog for deployment between two tags
website: https://github.com/nodes-android/ci-bitrise-changelog-step
source_code_url: https://github.com/nodes-android/ci-bitrise-changelog-step
support_url: https://github.com/nodes-android/ci-bitrise-changelog-step/issues
host_os_tags:
  - osx-10.10
project_type_tags: []
type_tags:
  - utility
is_requires_admin_user: false
is_always_run: false
is_skippable: false
deps:
  brew:
  - name: git
  apt_get:
  - name: git
run_if: true
inputs:
- conventional_commit: "yes"
  opts:
    is_expand: false
    is_required: true
    title: "Commits are following conventional commits, parse into sections."
    value_options:
    - "yes"
    - "no"
- pretty_git_format: "%s (%cn)"
  opts:
    is_expand: false
    is_required: false
    title: "git log format"
    category: Formatting
    summary: "git log --pretty formatting. Documentation on `git log` pretty formats can be found here: https://git-scm.com/docs/pretty-formats"
    description: "git log --pretty formatting. Documentation on `git log` pretty formats can be found here: https://git-scm.com/docs/pretty-formats"
- custom_dateformat: "%Y-%m-%d %H:%M:%S"
  opts:
    is_expand: false
    is_required: false
    title: "git log date format"
    category: Formatting
    summary: "If you are using dates in pretty_git_format, this is the way to customize it. Documentation on `git log` pretty formats can be found here: https://git-scm.com/docs/pretty-formats"
    description: "If you are using dates in pretty_git_format, this is the way to customize it. Documentation on `git log` pretty formats can be found here: https://git-scm.com/docs/pretty-formats"
outputs:
  - COMMIT_CHANGELOG: ""
    opts:
      title: "Generated changelog"
      summary: ""
      description: ""
  - COMMIT_CHANGELOG_MARKDOWN: ""
    opts:
      title: "Generated markdown changelog"
      summary: ""
      description: ""
